{"version":3,"sources":["redux/actions/userActions.js","components/Form/Form.js","redux/actions/filterUser.js","components/Filter/Filter.js","components/Filter/ContactList/ContactList.js","App.js","redux/reducers/allUsersReducer.js","redux/reducers/filterUserReducer.js","redux/store.js","index.js"],"names":["addUser","userObject","type","payload","deleteUser","name","Form","loginInputId","shortid","generate","numberInputId","objId","state","number","id","handleChange","event","setState","unId","currentTarget","value","handleSubmit","e","preventDefault","reset","props","y","onSubmit","this","htmlFor","placeholder","onChange","Component","mapDispatchToProps","addUserAction","connect","allUsers","filter","dispatch","filterUser","target","console","log","vlaue","onDelete","actions","store","className","map","onClick","App","init","allUsersReducers","newS","delet","elem","rootReducer","combineReducers","changeFilter","changeReducer","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d010b58b.chunk.js","sourcesContent":["import { number } from \"prop-types\";\r\n\r\nconst addUser = (userObject) => {\r\n  return {\r\n    type: \"ADD_USER\",\r\n    payload: userObject,\r\n  };\r\n};\r\n\r\nconst deleteUser = (name) => {\r\n  return {\r\n    type: \"DELET_USER\",\r\n    payload: name,\r\n  };\r\n};\r\n// const addUser = (userObject) => {\r\n//   return {\r\n//     type: \"ADD_USER\",\r\n//     payload: {\r\n//       id: id(),\r\n//       mail: userObject.email,\r\n//       pass: userObject.pass,\r\n//     },\r\n//   };\r\n// };\r\nexport default { addUser, deleteUser };\r\n","import { Component } from \"react\";\r\nimport shortid from \"shortid\";\r\nimport s from \"./Form.module.css\";\r\nimport { v4 as unId } from \"uuid\";\r\n\r\n//todo:\r\nimport { connect } from \"react-redux\";\r\nimport userAction from \"../../redux/actions/createUser\";\r\nimport addUserAction from \"../../redux/actions/userActions\";\r\nclass Form extends Component {\r\n  loginInputId = shortid.generate();\r\n  numberInputId = shortid.generate();\r\n  objId = shortid.generate();\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    id: \"\",\r\n  };\r\n  handleChange = (event) => {\r\n    // console.log(event.currentTarget);\r\n    // console.log(event.currentTarget.name);\r\n    // console.log(event.currentTarget.value);\r\n\r\n    this.setState({\r\n      id: unId(),\r\n      [event.currentTarget.name]: event.currentTarget.value,\r\n    });\r\n  };\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    //console.log(this.state);\r\n\r\n    this.reset();\r\n\r\n    //todo: редакс передал создание нового юзера\r\n    // const obj = {\r\n    //   name: this.state.name,\r\n    //   number: this.state.number,\r\n    //   id: this.state.id,\r\n    // };\r\n\r\n    this.props.y(this.state);\r\n  };\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form onSubmit={this.handleSubmit}>\r\n        <label htmlFor={this.loginInputId}>\r\n          <input\r\n            placeholder=\"Name\"\r\n            name=\"name\"\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            id={this.loginInputId}\r\n          />\r\n        </label>\r\n\r\n        <label htmlFor={this.numberInputId}>\r\n          <br />\r\n\r\n          <input\r\n            placeholder=\"Number\"\r\n            name=\"number\"\r\n            type=\"text\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            id={this.numberInputId}\r\n          />\r\n        </label>\r\n        <br />\r\n\r\n        <button type=\"submit\">Add contact</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  y: addUserAction.addUser,\r\n};\r\nexport default connect(null, mapDispatchToProps)(Form);\r\n","const changeFilter = (value) => ({\r\n  type: \"CHANGE_FILTER\",\r\n  payload: value,\r\n});\r\nexport default { changeFilter };\r\n","import React from \"react\";\r\nimport filterUser from \"../../redux/actions/filterUser\";\r\nimport { connect } from \"react-redux\";\r\n//console.log(filterUser);\r\n// console.log(this.props);\r\n//console.log(this.props);\r\nconst Filter = (props) => {\r\n  console.log(props);\r\n  const { value, onChange } = props;\r\n  return (\r\n    <label>\r\n      Find contacts by name\r\n      <input type=\"text\" vlaue={value} onChange={onChange} />\r\n    </label>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({ value: state.allUsers.filter });\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChange: (e) => dispatch(filterUser.changeFilter(e.target.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\r\nimport { v4 as unId } from \"uuid\";\r\nimport Contacts from \"./Contacts.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport actions from \"../../../redux/actions/userActions\";\r\n\r\nconst ContactList = ({ allUsers, onDelete }) => (\r\n  <ul className=\"TodoList\">\r\n    {allUsers.map(({ id, name, number }) => (\r\n      <li key={unId()} className=\"listStyle\">\r\n        <p className=\"TodoList__text\">\r\n          {name}:{number}\r\n        </p>\r\n        <button\r\n          type=\"button\"\r\n          className=\"TodoList__btn\"\r\n          onClick={() => onDelete(id)}\r\n        >\r\n          Remove\r\n        </button>\r\n      </li>\r\n    ))}\r\n  </ul>\r\n);\r\nconst mapStateToProps = (store) => ({ allUsers: store.allUsers });\r\n\r\nconst mapDispatchToProps = {\r\n  onDelete: (id) => actions.deleteUser(id),\r\n};\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import { Component } from \"react\";\r\nimport \"./App.css\";\r\n//todo: затягиваю hook.\r\n// import { connect } from \"react-redux\";\r\n// import addUserAction from \"./redux/actions/userActions\";\r\n//todo: Второе дз Phone book\r\n\r\nimport Form from \"./components/Form/Form\";\r\nimport Filter from \"./components/Filter/Filter\";\r\nimport ContactList from \"./components/Filter/ContactList/ContactList\";\r\nclass App extends Component {\r\n  // state = {\r\n  //   contacts: [\r\n  //     { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  //     { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  //     { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  //     { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n  //   ],\r\n  //   filter: \"\",\r\n  // };\r\n  // componentDidMount() {\r\n  //   // const { allUsers } = this.props;\r\n  //   // this.setState({ contacts: [...allUsers] });\r\n\r\n  //   const persistedData = JSON.parse(localStorage.getItem(\"clientContact\"));\r\n  //   console.log(persistedData);\r\n  //   if (persistedData) {\r\n  //     this.setState(() => ({ contacts: [...persistedData] }));\r\n  //     return;\r\n  //   }\r\n  // }\r\n  // componentDidUpdate(prevProps, prevState, snapshot) {\r\n  //   const { contacts } = this.state;\r\n  //   const { user, allUsers } = this.props;\r\n\r\n  //   if (user !== prevProps.user || allUsers !== prevProps.allUsers) {\r\n  //     this.setState({ contacts: [...allUsers] });\r\n  //   }\r\n  //   if (contacts !== prevState.contacts) {\r\n  //     localStorage.setItem(\"clientContact\", JSON.stringify(contacts));\r\n  //   }\r\n  // }\r\n\r\n  // changeFilter = (e) => {\r\n  //   this.setState({ filter: e.currentTarget.value });\r\n  // };\r\n  // getVisibleContac = () => {\r\n  //   const { filter, contacts } = this.state;\r\n  //   const normalized = filter.toLowerCase();\r\n  //   return contacts.filter((contact) =>\r\n  //     contact.name.toLowerCase().includes(normalized)\r\n  //   );\r\n  // };\r\n\r\n  // alert = () => {\r\n  //   const search = this.state.contacts.flatMap((el) => el.name);\r\n  //   console.log(search);\r\n  //   const res = search.filter((item, idx) => search.indexOf(item) === idx);\r\n  //   alert(res);\r\n  // };\r\n  render() {\r\n    // const { filter } = this.state;\r\n    // const visibleContact = this.getVisibleContac();\r\n\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n          <h1>Phonebook</h1>\r\n          <Form />\r\n          <h2>Contacts</h2>\r\n          <Filter />\r\n          <ContactList />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n\r\n//value={filter} onChange={this.changeFilter} в фильтре было\r\n","const init = [{ name: \"\", number: \"\", id: \"\" }];\r\n\r\nconst allUsersReducers = (state = init, { type, payload }) => {\r\n  switch (type) {\r\n    case \"ADD_USER\":\r\n      const newS = [...state, payload];\r\n      return newS;\r\n\r\n    case \"DELET_USER\":\r\n      console.log(payload);\r\n      const delet = state.filter((elem) => elem.id !== payload);\r\n      return delet;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default allUsersReducers;\r\n","const filter = (state = \"\", { type, payload }) => {\r\n  switch (type) {\r\n    case \"CHANGE_FILTER\":\r\n      return payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default { filter };\r\n","import { createStore, combineReducers } from \"redux\";\r\n\r\nimport allUsersReducers from \"./reducers/allUsersReducer\";\r\nimport changeReducer from \"./reducers/filterUserReducer\";\r\nconst rootReducer = combineReducers({\r\n  allUsers: allUsersReducers,\r\n  changeFilter: changeReducer,\r\n});\r\nconst store = createStore(\r\n  rootReducer,\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n);\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from \"./redux/store.js\";\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}